<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--包扫描，排除controller层-->
    <context:component-scan base-package="com.atcdu.liujun">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--配置数据源-->
        <!-- 引入外部配置文件-->
        <context:property-placeholder location="classpath:dataSource/dbConfig.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
    </bean>

    <!--配置事务控制(配置事务控制器，让它管理数据源里面的提交和关闭)-->
    <bean id="TxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置事务,那些方法要切入事务，配置事务方法表达式-->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* com.atcdu.liujun.service.* .*(..))"/>
        <aop:advisor advice-ref="myTx" pointcut-ref="txPoint"></aop:advisor>
    </aop:config>
    <!--最重要的是idea中自动导入的tx名称空间是错的，
    手动改为：xmlns:tx="http://www.springframework.org/schema/tx"       -->

    <!--具体的对那个切入点方法的事务的控制-->
    <tx:advice id="myTx" transaction-manager="TxManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception"/>
<!--            <tx:method name="get*" read-only="true"></tx:method>-->
<!--            <tx:method name="insert*" isolation="REPEATABLE_READ"></tx:method>-->
        </tx:attributes>
    </tx:advice>
    <!--整合mybatis   配置mybatis的sqlsessionfactorybean-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatisConfig.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>
    </bean>
    <!--把dao接口注入到ioc中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.atcdu.liujun.dao"></property>
    </bean>


</beans>